# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Build and test

on: [push]
#
#  release:
#    branches: [master]
#    types: [created]

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          java-version: '18'
#          distribution: 'corretto'
#          cache: gradle
#
#      - name: Gradle Wrapper
#        uses: gradle/wrapper-validation-action@v1
#
#      - name: Gradle Build
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: build
#        env:
#          GITHUB_ACTOR: ${{ github.actor }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'corretto'
          cache: gradle

      - name: Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Gradle Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GITHUB_TOKEN
            echo $GITHUB_ACTOR

      - name: Publish to GitHub Packages
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
          GRADLE_OPTS: -Dorg.gradle.debug=true
